// <auto-generated />
using System;
using Gestion_Administrativa_Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion_Administrativa_Api.Migrations
{
    [DbContext(typeof(_context))]
    [Migration("20240613013630_nueva")]
    partial class nueva
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Cajas", b =>
                {
                    b.Property<int>("IdCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCaja");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCaja"));

                    b.Property<bool?>("Detallado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("detallado");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCierre");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<decimal?>("TotalApertura")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalApertura");

                    b.Property<decimal?>("TotalCierre")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalCierre");

                    b.HasKey("IdCaja")
                        .HasName("PK__Cajas__8BC79B34440E38E5");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Cajas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Ciudades", b =>
                {
                    b.Property<Guid>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCiudad")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdProvincia")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProvincia");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCiudad")
                        .HasName("ciudades_pkey");

                    b.HasIndex("IdProvincia");

                    b.ToTable("ciudades", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Clientes", b =>
                {
                    b.Property<Guid>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCliente")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdCiudad")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCiudad");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<Guid?>("IdTipoIdentificacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoIdentificacion");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Observacion")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("observacion");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Telefono")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("telefono");

                    b.HasKey("IdCliente")
                        .HasName("clientes_pkey");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdTipoIdentificacion");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DenominacionesDinero", b =>
                {
                    b.Property<int>("IdDenominacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDenominacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDenominacion"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("IdTipoDenominacion")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("idTipoDenominacion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdDenominacion")
                        .HasName("PK__Denomina__80C12401D636482D");

                    b.HasIndex("IdTipoDenominacion");

                    b.ToTable("DenominacionesDinero");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetalleFacturas", b =>
                {
                    b.Property<Guid>("IdDetalleFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idDetalleFactura")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("cantidad");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("descuento");

                    b.Property<DateTime?>("FechoRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechoRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("IdFactura")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idFactura");

                    b.Property<Guid>("IdIva")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idIva");

                    b.Property<Guid>("IdProducto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProducto");

                    b.Property<decimal?>("Porcentaje")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("porcentaje");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("subtotal");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("total");

                    b.Property<decimal?>("ValorPorcentaje")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("valorPorcentaje");

                    b.HasKey("IdDetalleFactura")
                        .HasName("detalleFacturas_pkey");

                    b.HasIndex("IdFactura");

                    b.HasIndex("IdIva");

                    b.HasIndex("IdProducto");

                    b.ToTable("detalleFacturas", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetalleFormaPagos", b =>
                {
                    b.Property<Guid>("IdDetalleFormaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idDetalleFormaPago")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("IdFactura")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idFactura");

                    b.Property<Guid>("IdFormaPago")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idFormaPago");

                    b.Property<Guid>("IdTiempoFormaPago")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTiempoFormaPago");

                    b.Property<decimal>("Plazo")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("plazo");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdDetalleFormaPago")
                        .HasName("detalleFormaPagos_pkey");

                    b.HasIndex("IdFactura");

                    b.HasIndex("IdFormaPago");

                    b.HasIndex("IdTiempoFormaPago");

                    b.ToTable("detalleFormaPagos", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetallePrecioProductos", b =>
                {
                    b.Property<Guid>("IdDetallePrecioProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idDetallePrecioProducto")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdIva")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idIva");

                    b.Property<Guid?>("IdProducto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProducto");

                    b.Property<decimal?>("Porcentaje")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("porcentaje");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("total");

                    b.Property<decimal?>("TotalIva")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("totalIva");

                    b.HasKey("IdDetallePrecioProducto")
                        .HasName("detallePrecioProductos_pkey");

                    b.HasIndex("IdIva");

                    b.HasIndex("IdProducto");

                    b.ToTable("detallePrecioProductos", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetalleProformas", b =>
                {
                    b.Property<Guid>("IdDetalleProforma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idDetalleProforma")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("cantidad");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("descuento");

                    b.Property<Guid>("IdIva")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idIva");

                    b.Property<Guid>("IdProducto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProducto");

                    b.Property<Guid>("IdProforma")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProforma");

                    b.Property<decimal?>("Porcentaje")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("porcentaje");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("subtotal");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("total");

                    b.Property<decimal?>("ValorPorcentaje")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("valorPorcentaje");

                    b.HasKey("IdDetalleProforma")
                        .HasName("detalleProformas_pkey");

                    b.HasIndex("IdProforma");

                    b.ToTable("detalleProformas", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetallesCajas", b =>
                {
                    b.Property<int>("IdDetalleCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleCaja");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCaja"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdCaja")
                        .HasColumnType("int")
                        .HasColumnName("idCaja");

                    b.Property<int?>("IdDenominacion")
                        .HasColumnType("int")
                        .HasColumnName("idDenominacion");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleCaja")
                        .HasName("PK__Detalles__0D031FF916F49A74");

                    b.HasIndex("IdCaja");

                    b.HasIndex("IdDenominacion");

                    b.ToTable("DetallesCajas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetallesCajasCierres", b =>
                {
                    b.Property<int>("IdDetalleCajaCierre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleCajaCierre");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCajaCierre"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdCaja")
                        .HasColumnType("int")
                        .HasColumnName("idCaja");

                    b.Property<int?>("IdDenominacion")
                        .HasColumnType("int")
                        .HasColumnName("idDenominacion");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleCajaCierre")
                        .HasName("PK__Detalles__B96398E0F455CA0C");

                    b.HasIndex("IdCaja");

                    b.HasIndex("IdDenominacion");

                    b.ToTable("DetallesCajasCierres");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DocumentosEmitir", b =>
                {
                    b.Property<Guid>("IdDocumentoEmitir")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idDocumentoEmitir")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdTipoDocumento")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoDocumento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdDocumentoEmitir")
                        .HasName("documentosEmitir_pkey");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("documentosEmitir", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Empleados", b =>
                {
                    b.Property<Guid>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpleado")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdCiudad")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCiudad");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<Guid?>("IdTipoIdentificacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoIdentificacion");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Observacion")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("observacion");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Telefono")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("telefono");

                    b.HasKey("IdEmpleado")
                        .HasName("empleados_pkey");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdTipoIdentificacion");

                    b.ToTable("empleados", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Empresas", b =>
                {
                    b.Property<Guid>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<bool?>("AgenteRetencion")
                        .HasColumnType("bit")
                        .HasColumnName("agenteRetencion");

                    b.Property<string>("DireccionMatriz")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("direccionMatriz");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdInformacionFirma")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idInformacionFirma");

                    b.Property<Guid?>("IdTipoNegocio")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoNegocio");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("identificacion");

                    b.Property<bool?>("LlevaContabilidad")
                        .HasColumnType("bit")
                        .HasColumnName("llevaContabilidad");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("razonSocial");

                    b.Property<bool?>("RegimenMicroEmpresas")
                        .HasColumnType("bit")
                        .HasColumnName("regimenMicroEmpresas");

                    b.Property<bool?>("RegimenRimpe")
                        .HasColumnType("bit")
                        .HasColumnName("regimenRimpe");

                    b.Property<string>("ResolucionAgenteRetencion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("resolucionAgenteRetencion");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("telefono");

                    b.HasKey("IdEmpresa")
                        .HasName("empresas_pkey");

                    b.HasIndex("IdInformacionFirma");

                    b.HasIndex("IdTipoNegocio");

                    b.ToTable("empresas", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.ErrorLogs", b =>
                {
                    b.Property<int>("IdError")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idError");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdError"));

                    b.Property<string>("Error")
                        .HasMaxLength(7300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7300)")
                        .HasColumnName("error");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdError")
                        .HasName("PK__ErrorLog__6FC78380515670CB");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Establecimientos", b =>
                {
                    b.Property<Guid>("IdEstablecimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEstablecimiento")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Direccion")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("direccion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<long?>("Nombre")
                        .HasColumnType("bigint")
                        .HasColumnName("nombre");

                    b.Property<bool?>("Predeterminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("predeterminado");

                    b.HasKey("IdEstablecimiento")
                        .HasName("establecimientos_pkey");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("establecimientos", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Facturas", b =>
                {
                    b.Property<Guid>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idFactura")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("AgenteRetencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("agenteRetencion");

                    b.Property<int?>("Ambiente")
                        .HasColumnType("int")
                        .HasColumnName("ambiente");

                    b.Property<decimal?>("Cambio")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("cambio");

                    b.Property<string>("ClaveAcceso")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("claveAcceso");

                    b.Property<int?>("CodigoDocModificado")
                        .HasColumnType("int")
                        .HasColumnName("codigoDocModificado");

                    b.Property<string>("ContribuyenteEspecial")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contribuyenteEspecial");

                    b.Property<bool?>("ContribuyenteRimpe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("contribuyenteRimpe");

                    b.Property<bool?>("CorreoEnviado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("correoEnviado");

                    b.Property<string>("DireccionEstablecimiento")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("direccionEstablecimiento");

                    b.Property<string>("DireccionMatriz")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("direccionMatriz");

                    b.Property<string>("EmisorRazonSocial")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("emisorRazonSocial");

                    b.Property<string>("EmisorRuc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emisorRuc");

                    b.Property<int?>("Establecimiento")
                        .HasColumnType("int")
                        .HasColumnName("establecimiento");

                    b.Property<decimal?>("ExentoIva")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("exentoIva");

                    b.Property<DateTime?>("FechaAutorizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAutorizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaEmision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEmision")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("Ice")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("ice");

                    b.Property<Guid>("IdCiudad")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCiudad");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCliente");

                    b.Property<Guid>("IdDocumentoEmitir")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idDocumentoEmitir");

                    b.Property<Guid>("IdEstablecimiento")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEstablecimiento");

                    b.Property<Guid>("IdPuntoEmision")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idPuntoEmision");

                    b.Property<int>("IdTipoEstadoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("idTipoEstadoDocumento");

                    b.Property<int?>("IdTipoEstadoSri")
                        .HasColumnType("int")
                        .HasColumnName("idTipoEstadoSri");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuario");

                    b.Property<decimal?>("Irbpnr")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("irbpnr");

                    b.Property<decimal?>("Isd")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("isd");

                    b.Property<decimal?>("Iva12")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("iva12");

                    b.Property<string>("Mensaje")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("mensaje");

                    b.Property<string>("Moneda")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("moneda");

                    b.Property<bool?>("ObligadoContabilidad")
                        .HasColumnType("bit")
                        .HasColumnName("obligadoContabilidad");

                    b.Property<int?>("PuntoEmision")
                        .HasColumnType("int")
                        .HasColumnName("puntoEmision");

                    b.Property<string>("ReceptorCorreo")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("receptorCorreo");

                    b.Property<string>("ReceptorDireccion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("receptorDireccion");

                    b.Property<string>("ReceptorRazonSocial")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("receptorRazonSocial");

                    b.Property<string>("ReceptorRuc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("receptorRuc");

                    b.Property<string>("ReceptorTelefono")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("receptorTelefono");

                    b.Property<int?>("ReceptorTipoIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("receptorTipoIdentificacion");

                    b.Property<bool?>("RegimenMicroempresas")
                        .HasColumnType("bit")
                        .HasColumnName("regimenMicroempresas");

                    b.Property<bool?>("RegimenRimpe")
                        .HasColumnType("bit")
                        .HasColumnName("regimenRimpe");

                    b.Property<string>("ResolucionAgenteRetencion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("resolucionAgenteRetencion");

                    b.Property<string>("Ruta")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("ruta");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("saldo");

                    b.Property<int?>("Secuencial")
                        .HasColumnType("int")
                        .HasColumnName("secuencial");

                    b.Property<decimal?>("Subtotal0")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("subtotal0");

                    b.Property<decimal?>("Subtotal12")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("subtotal12");

                    b.Property<int?>("TipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("tipoDocumento");

                    b.Property<int?>("TipoEmision")
                        .HasColumnType("int")
                        .HasColumnName("tipoEmision");

                    b.Property<decimal?>("TotalDescuento")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("totalDescuento");

                    b.Property<decimal?>("TotalImporte")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("totalImporte");

                    b.Property<decimal?>("TotalSinImpuesto")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("totalSinImpuesto");

                    b.Property<decimal?>("ValorRecibido")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("valorRecibido");

                    b.Property<string>("VersionXml")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("versionXml");

                    b.HasKey("IdFactura")
                        .HasName("facturas_pkey");

                    b.HasIndex("IdTipoEstadoDocumento");

                    b.HasIndex("IdTipoEstadoSri");

                    b.HasIndex("IdUsuario");

                    b.ToTable("facturas", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.FormaPagos", b =>
                {
                    b.Property<Guid>("IdFormaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idFormaPago")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdFormaPago")
                        .HasName("formaPagos_pkey");

                    b.ToTable("formaPagos", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.ImpuestoRetenciones", b =>
                {
                    b.Property<Guid>("IdImpuestoRetencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idImpuestoRetencion")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("BaseImponible")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("baseImponible");

                    b.Property<decimal?>("CodDocSustento")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("codDocSustento");

                    b.Property<string>("FechaEmisionDocSustento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fechaEmisionDocSustento");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("IdPorcentajeImpuestoRetencion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idPorcentajeImpuestoRetencion");

                    b.Property<Guid>("IdRetencion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idRetencion");

                    b.Property<Guid>("IdTipoValorRetencion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoValorRetencion");

                    b.Property<string>("NumDocSustento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("numDocSustento");

                    b.Property<decimal?>("PorcentajeRetener")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("porcentajeRetener");

                    b.Property<decimal?>("ValorRetenido")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("valorRetenido");

                    b.HasKey("IdImpuestoRetencion")
                        .HasName("impuestoRetenciones_pkey");

                    b.HasIndex("IdPorcentajeImpuestoRetencion");

                    b.HasIndex("IdRetencion");

                    b.HasIndex("IdTipoValorRetencion");

                    b.ToTable("impuestoRetenciones", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.InformacionAdicional", b =>
                {
                    b.Property<Guid>("IdInformacionAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idInformacionAdicional")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("IdFactura")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idFactura");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.Property<string>("Valor")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("valor");

                    b.HasKey("IdInformacionAdicional")
                        .HasName("informacionAdicional_pkey");

                    b.HasIndex("IdFactura");

                    b.ToTable("informacionAdicional", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.InformacionAdicionalRetencion", b =>
                {
                    b.Property<Guid>("IdInformacionAdicionalRetencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idInformacionAdicionalRetencion")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("IdRetencion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idRetencion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.Property<string>("Valor")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("valor");

                    b.HasKey("IdInformacionAdicionalRetencion")
                        .HasName("informacionAdicionalRetencion_pkey");

                    b.HasIndex("IdRetencion");

                    b.ToTable("informacionAdicionalRetencion", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.InformacionFirmas", b =>
                {
                    b.Property<Guid>("IdInformacionFirma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idInformacionFirma")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Codigo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Ruta")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("ruta");

                    b.HasKey("IdInformacionFirma")
                        .HasName("informacionFirmas_pkey");

                    b.ToTable("informacionFirmas", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Ivas", b =>
                {
                    b.Property<Guid>("IdIva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idIva")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdIva")
                        .HasName("ivas_pkey");

                    b.ToTable("ivas", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Lotes", b =>
                {
                    b.Property<int>("IdLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLote");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLote"));

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("cantidad");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdProducto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProducto");

                    b.Property<Guid?>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuario");

                    b.HasKey("IdLote")
                        .HasName("PK__lotes__1B91FFCB655DA6A5");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("lotes", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.PorcentajeImpuestosRetenciones", b =>
                {
                    b.Property<Guid>("IdPorcentajeImpuestoRetencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idPorcentajeImpuestoRetencion")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("IdTipoValorRetencion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoValorRetencion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdPorcentajeImpuestoRetencion")
                        .HasName("porcentajeRetencion_pkey");

                    b.HasIndex("IdTipoValorRetencion");

                    b.ToTable("porcentajeImpuestosRetenciones", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Productos", b =>
                {
                    b.Property<Guid>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProducto")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<bool?>("ActivoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activoProducto");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("cantidad");

                    b.Property<string>("Codigo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<Guid?>("IdIva")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idIva");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("TotalIva")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("totalIva");

                    b.HasKey("IdProducto")
                        .HasName("productos_pkey");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdIva");

                    b.ToTable("productos", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.ProductosProveedores", b =>
                {
                    b.Property<int>("IdProductoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProductoProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductoProveedor"));

                    b.Property<string>("CodigoPrincipal")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codigoPrincipal");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdProducto")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProducto");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.HasKey("IdProductoProveedor")
                        .HasName("PK__Producto__358285855AECBB43");

                    b.HasIndex("IdProducto");

                    b.HasIndex("Identificacion");

                    b.ToTable("ProductosProveedores");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Proformas", b =>
                {
                    b.Property<Guid>("IdProforma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProforma")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("Ambiente")
                        .HasColumnType("int")
                        .HasColumnName("ambiente");

                    b.Property<int?>("Establecimiento")
                        .HasColumnType("int")
                        .HasColumnName("establecimiento");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("IdEstablecimiento")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEstablecimiento");

                    b.Property<Guid>("IdPuntoEmision")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idPuntoEmision");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Moneda")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("moneda");

                    b.Property<int?>("PuntoEmision")
                        .HasColumnType("int")
                        .HasColumnName("puntoEmision");

                    b.Property<string>("ReceptorCorreo")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("receptorCorreo");

                    b.Property<string>("ReceptorDireccion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("receptorDireccion");

                    b.Property<string>("ReceptorRazonSocial")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("receptorRazonSocial");

                    b.Property<string>("ReceptorRuc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("receptorRuc");

                    b.Property<string>("ReceptorTelefono")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("receptorTelefono");

                    b.Property<int?>("ReceptorTipoIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("receptorTipoIdentificacion");

                    b.Property<int?>("Secuencial")
                        .HasColumnType("int")
                        .HasColumnName("secuencial");

                    b.Property<decimal?>("Subtotal12")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("subtotal12");

                    b.Property<decimal?>("TotalDescuento")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("totalDescuento");

                    b.Property<decimal?>("TotalImporte")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("totalImporte");

                    b.Property<decimal?>("TotalSinImpuesto")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("totalSinImpuesto");

                    b.HasKey("IdProforma")
                        .HasName("proformas_pkey");

                    b.HasIndex("IdEstablecimiento");

                    b.HasIndex("IdPuntoEmision");

                    b.HasIndex("IdUsuario");

                    b.ToTable("proformas", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Proveedores", b =>
                {
                    b.Property<Guid>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProveedor")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdCiudad")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCiudad");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<Guid?>("IdTipoIdentificacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoIdentificacion");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Observacion")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("observacion");

                    b.Property<string>("PaginaWeb")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("paginaWeb");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Representante")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("representante");

                    b.Property<string>("Telefono")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("telefono");

                    b.HasKey("IdProveedor")
                        .HasName("proveedores_pkey");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdTipoIdentificacion");

                    b.ToTable("proveedores", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Provincias", b =>
                {
                    b.Property<Guid>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idProvincia")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdProvincia")
                        .HasName("provincias_pkey");

                    b.ToTable("provincias", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.PuntoEmisiones", b =>
                {
                    b.Property<Guid>("IdPuntoEmision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idPuntoEmision")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Direccion")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("direccion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<long?>("Nombre")
                        .HasColumnType("bigint")
                        .HasColumnName("nombre");

                    b.Property<bool?>("Predeterminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("predeterminado");

                    b.HasKey("IdPuntoEmision")
                        .HasName("puntoEmisiones_pkey");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("puntoEmisiones", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Retenciones", b =>
                {
                    b.Property<Guid>("IdRetencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idRetencion")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AgenteRetencion")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("agenteRetencion");

                    b.Property<int?>("Ambiente")
                        .HasColumnType("int")
                        .HasColumnName("ambiente");

                    b.Property<string>("ClaveAcceso")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("claveAcceso");

                    b.Property<int?>("CodigoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("codigoDocumento");

                    b.Property<bool?>("CorreoEnviado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("correoEnviado");

                    b.Property<string>("DireccionMatriz")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("direccionMatriz");

                    b.Property<string>("EmisorNombreComercial")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("emisorNombreComercial");

                    b.Property<string>("EmisorRazonSocial")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("emisorRazonSocial");

                    b.Property<string>("EmisorRuc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emisorRuc");

                    b.Property<int?>("Establecimiento")
                        .HasColumnType("int")
                        .HasColumnName("establecimiento");

                    b.Property<DateTime?>("FechaAutorizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAutorizacion");

                    b.Property<DateTime?>("FechaEmision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEmision")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("IdDocumentoEmitir")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idDocumentoEmitir");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<Guid>("IdEstablecimiento")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEstablecimiento");

                    b.Property<int>("IdFactura")
                        .HasColumnType("int")
                        .HasColumnName("idFactura");

                    b.Property<Guid>("IdPuntoEmision")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idPuntoEmision");

                    b.Property<Guid>("IdTipoDocumento")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoDocumento");

                    b.Property<int>("IdTipoEstadoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("idTipoEstadoDocumento");

                    b.Property<int?>("IdTipoEstadoSri")
                        .HasColumnType("int")
                        .HasColumnName("idTipoEstadoSri");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuario");

                    b.Property<string>("IdentificacionSujetoRetenido")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacionSujetoRetenido");

                    b.Property<string>("NumAutDocSustento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numAutDocSustento");

                    b.Property<bool?>("ObligadoContabilidad")
                        .HasColumnType("bit")
                        .HasColumnName("obligadoContabilidad");

                    b.Property<string>("PeriodoFiscal")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("periodoFiscal");

                    b.Property<int?>("PuntoEmision")
                        .HasColumnType("int")
                        .HasColumnName("puntoEmision");

                    b.Property<string>("RazonSocialSujetoRetenido")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("razonSocialSujetoRetenido");

                    b.Property<string>("ReceptorCorreo")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("receptorCorreo");

                    b.Property<string>("Ruta")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("ruta");

                    b.Property<int?>("Secuencial")
                        .HasColumnType("int")
                        .HasColumnName("secuencial");

                    b.Property<int?>("TipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("tipoDocumento");

                    b.Property<int?>("TipoEmision")
                        .HasColumnType("int")
                        .HasColumnName("tipoEmision");

                    b.Property<string>("TipoIdentificacionSujetoRetenido")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipoIdentificacionSujetoRetenido");

                    b.Property<string>("VersionXml")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("versionXml");

                    b.HasKey("IdRetencion")
                        .HasName("retenciones_pkey");

                    b.HasIndex("IdDocumentoEmitir");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdEstablecimiento");

                    b.HasIndex("IdFactura");

                    b.HasIndex("IdPuntoEmision");

                    b.HasIndex("IdTipoDocumento");

                    b.HasIndex("IdTipoEstadoDocumento");

                    b.HasIndex("IdTipoEstadoSri");

                    b.HasIndex("IdUsuario");

                    b.ToTable("retenciones", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Secuenciales", b =>
                {
                    b.Property<Guid>("IdSecuencial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idSecuencial")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<Guid?>("IdTipoDocumento")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoDocumento");

                    b.Property<long?>("Nombre")
                        .HasColumnType("bigint")
                        .HasColumnName("nombre");

                    b.HasKey("IdSecuencial")
                        .HasName("secuenciales_pkey");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("secuenciales", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SecuencialesProformas", b =>
                {
                    b.Property<Guid>("IdSecuencialesProforma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idSecuencialesProforma")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<Guid?>("IdTipoDocumento")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoDocumento");

                    b.Property<long?>("Nombre")
                        .HasColumnType("bigint")
                        .HasColumnName("nombre");

                    b.HasKey("IdSecuencialesProforma")
                        .HasName("secuencialesProformas_pkey");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("secuencialesProformas", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriAmbientes", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigo");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Ambiente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ambiente");

                    b.HasKey("Codigo")
                        .HasName("PK__SriAmbie__40F9A20795A36BD9");

                    b.ToTable("SriAmbientes");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriCamposAdicionales", b =>
                {
                    b.Property<int>("IdCampoAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCampoAdicional");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCampoAdicional"));

                    b.Property<int?>("IdFactura")
                        .HasColumnType("int")
                        .HasColumnName("idFactura");

                    b.Property<string>("Nombre")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nombre");

                    b.Property<string>("Text")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("text");

                    b.HasKey("IdCampoAdicional")
                        .HasName("PK__SriCampo__745B4250D651D0DE");

                    b.HasIndex("IdFactura");

                    b.ToTable("SriCamposAdicionales");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriDetallesFacturas", b =>
                {
                    b.Property<int>("IdDetalleFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleFactura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleFactura"));

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("cantidad");

                    b.Property<string>("CodigoPrincipal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigoPrincipal");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("descuento");

                    b.Property<int?>("IdFactura")
                        .HasColumnType("int")
                        .HasColumnName("idFactura");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<decimal?>("PrecioTotalConImpuesto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioTotalConImpuesto");

                    b.Property<decimal?>("PrecioTotalSinImpuesto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioTotalSinImpuesto");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioUnitario");

                    b.HasKey("IdDetalleFactura")
                        .HasName("PK__SriDetal__DFF38252565B8160");

                    b.HasIndex("IdFactura");

                    b.HasIndex("IdProducto");

                    b.ToTable("SriDetallesFacturas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriDetallesFacturasImpuestos", b =>
                {
                    b.Property<int>("IdDetalleFacturaImpuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleFacturaImpuesto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleFacturaImpuesto"));

                    b.Property<decimal?>("BaseImponible")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("baseImponible");

                    b.Property<string>("Codigo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigo");

                    b.Property<string>("CodigoPorcentaje")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigoPorcentaje");

                    b.Property<int?>("IdDetalleFactura")
                        .HasColumnType("int")
                        .HasColumnName("idDetalleFactura");

                    b.Property<decimal?>("Tarifa")
                        .HasColumnType("numeric(5, 2)")
                        .HasColumnName("tarifa");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdDetalleFacturaImpuesto")
                        .HasName("PK__SriDetal__5383C987320853EA");

                    b.HasIndex("CodigoPorcentaje");

                    b.HasIndex("IdDetalleFactura");

                    b.ToTable("SriDetallesFacturasImpuestos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriEstados", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado");

                    b.HasKey("Codigo")
                        .HasName("PK__SriEstad__40F9A207020C3F18");

                    b.ToTable("SriEstados");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriFacturas", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFactura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<string>("Ambiente")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("ambiente");

                    b.Property<string>("ClaveAcceso")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("claveAcceso");

                    b.Property<string>("CodDoc")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codDoc");

                    b.Property<int?>("CodigoEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("codigoEstado");

                    b.Property<bool?>("Compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("compra");

                    b.Property<string>("ContribuyenteEspecial")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("contribuyenteEspecial");

                    b.Property<string>("DirEstablecimiento")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("dirEstablecimiento");

                    b.Property<string>("DirMatriz")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("dirMatriz");

                    b.Property<string>("Estab")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("estab");

                    b.Property<DateTime?>("FechaAutorizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAutorizacion");

                    b.Property<DateOnly?>("FechaEmision")
                        .HasColumnType("date")
                        .HasColumnName("fechaEmision");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<Guid?>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuario");

                    b.Property<string>("IdentificacionComprador")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacionComprador");

                    b.Property<decimal?>("ImporteTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("importeTotal");

                    b.Property<string>("Moneda")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("moneda");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombreComercial");

                    b.Property<string>("ObligadoContabilidad")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("obligadoContabilidad");

                    b.Property<decimal?>("Propina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("propina");

                    b.Property<string>("PtoEmi")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("ptoEmi");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("RazonSocialComprador")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("razonSocialComprador");

                    b.Property<bool?>("RetencionGenerada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("retencionGenerada");

                    b.Property<string>("Ruc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ruc");

                    b.Property<string>("Secuencial")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("secuencial");

                    b.Property<string>("TipoIdentificacionComprador")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("tipoIdentificacionComprador");

                    b.Property<decimal?>("TotalDescuento")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalDescuento");

                    b.Property<decimal?>("TotalSinImpuesto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalSinImpuesto");

                    b.Property<string>("Version")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("version");

                    b.HasKey("IdFactura")
                        .HasName("PK__SriFactu__3CD5687EDC14F968");

                    b.HasIndex("Ambiente");

                    b.HasIndex("CodDoc");

                    b.HasIndex("Moneda");

                    b.ToTable("SriFacturas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriFormasPagos", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigo");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("FormaPago")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("formaPago");

                    b.HasKey("Codigo")
                        .HasName("PK__SriForma__40F9A207FDC79B7D");

                    b.ToTable("SriFormasPagos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriMonedas", b =>
                {
                    b.Property<string>("Moneda")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("moneda");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.HasKey("Moneda")
                        .HasName("PK__SriMoned__93B33AA15A7813C3");

                    b.ToTable("SriMonedas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriPagos", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<string>("FormaPago")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("formaPago");

                    b.Property<int?>("IdFactura")
                        .HasColumnType("int")
                        .HasColumnName("idFactura");

                    b.Property<int?>("Plazo")
                        .HasColumnType("int")
                        .HasColumnName("plazo");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.Property<string>("UnidadTiempo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("unidadTiempo");

                    b.HasKey("IdPago")
                        .HasName("PK__SriPagos__BD2295ADA7885B83");

                    b.HasIndex("FormaPago");

                    b.HasIndex("IdFactura");

                    b.HasIndex("UnidadTiempo");

                    b.ToTable("SriPagos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriPersonas", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Direccion")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombres")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombres");

                    b.Property<bool?>("Proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("proveedor");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoIdentificacion")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("tipoIdentificacion");

                    b.HasKey("Identificacion")
                        .HasName("PK__SriPerso__C196DEC6AE40344B");

                    b.HasIndex("TipoIdentificacion");

                    b.ToTable("SriPersonas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriPrecios", b =>
                {
                    b.Property<int>("IdPrecio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPrecio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrecio"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<decimal?>("BaseImponible")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("baseImponible");

                    b.Property<string>("Codigo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigo");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<decimal?>("Tarifa")
                        .HasColumnType("numeric(5, 2)")
                        .HasColumnName("tarifa");

                    b.Property<decimal?>("TotalConImpuestos")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalConImpuestos");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdPrecio")
                        .HasName("PK__SriPreci__BF8B120CC62B3C36");

                    b.HasIndex("Codigo");

                    b.HasIndex("IdProducto");

                    b.ToTable("SriPrecios");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriProductos", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("CodigoPrincipal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigoPrincipal");

                    b.Property<bool?>("Disponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("disponible");

                    b.Property<Guid?>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<decimal?>("PrecioCompra")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioCompra");

                    b.Property<string>("Producto")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("producto");

                    b.Property<decimal?>("Stock")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("stock");

                    b.HasKey("IdProducto")
                        .HasName("PK__SriProdu__07F4A1327F54DC9C");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("Identificacion");

                    b.ToTable("SriProductos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriTarifasImpuestos", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigo");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("Tarifa")
                        .HasColumnType("numeric(5, 2)")
                        .HasColumnName("tarifa");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("numeric(5, 2)")
                        .HasColumnName("valor");

                    b.HasKey("Codigo")
                        .HasName("PK__SriTarif__40F9A207A42C4BA1");

                    b.ToTable("SriTarifasImpuestos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriTiposDocumentos", b =>
                {
                    b.Property<string>("CodDoc")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codDoc");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoDocumento");

                    b.HasKey("CodDoc")
                        .HasName("PK__SriTipos__9FE736F2AC209630");

                    b.ToTable("SriTiposDocumentos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriTiposIdentificaciones", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigo");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("TipoIdentificacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoIdentificacion");

                    b.HasKey("Codigo")
                        .HasName("PK__SriTipos__40F9A207CE71EE3D");

                    b.ToTable("SriTiposIdentificaciones");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriTotalesConImpuestos", b =>
                {
                    b.Property<int>("IdTotalConImpuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTotalConImpuesto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTotalConImpuesto"));

                    b.Property<decimal?>("BaseImponible")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("baseImponible");

                    b.Property<string>("Codigo")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigo");

                    b.Property<string>("CodigoPorcentaje")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigoPorcentaje");

                    b.Property<decimal?>("DescuentoAdicional")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("descuentoAdicional");

                    b.Property<int?>("IdFactura")
                        .HasColumnType("int")
                        .HasColumnName("idFactura");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdTotalConImpuesto")
                        .HasName("PK__SriTotal__22EAEE70429CEFD4");

                    b.HasIndex("CodigoPorcentaje");

                    b.HasIndex("IdFactura");

                    b.ToTable("SriTotalesConImpuestos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriUnidadesTiempos", b =>
                {
                    b.Property<string>("UnidadTiempo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("unidadTiempo");

                    b.Property<string>("Codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigo");

                    b.HasKey("UnidadTiempo")
                        .HasName("SriUnidadesTiempos_pkey");

                    b.ToTable("SriUnidadesTiempos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TiempoFormaPagos", b =>
                {
                    b.Property<Guid>("IdTiempoFormaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTiempoFormaPago")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTiempoFormaPago")
                        .HasName("tiempoFormaPagos_pkey");

                    b.ToTable("tiempoFormaPagos", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoDocumentos", b =>
                {
                    b.Property<Guid>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoDocumento")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipoDocumento")
                        .HasName("tipoDocumentos_pkey");

                    b.ToTable("tipoDocumentos", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoEstadoDocumentos", b =>
                {
                    b.Property<int>("IdTipoEstadoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("idTipoEstadoDocumento");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipoEstadoDocumento")
                        .HasName("tipoEstadoDocumentos_pkey");

                    b.ToTable("tipoEstadoDocumentos", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoEstadoSri", b =>
                {
                    b.Property<int>("IdTipoEstadoSri")
                        .HasColumnType("int")
                        .HasColumnName("idTipoEstadoSri");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipoEstadoSri")
                        .HasName("tipoEstadoSri_pkey");

                    b.ToTable("tipoEstadoSri", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoIdentificaciones", b =>
                {
                    b.Property<Guid>("IdTipoIdentificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoIdentificacion")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipoIdentificacion")
                        .HasName("tipoIdentificaciones_pkey");

                    b.ToTable("tipoIdentificaciones", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoIdentificacionesGeneracionDocumentos", b =>
                {
                    b.Property<Guid>("IdTipoIdentificacionesGeneracionDocumentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoIdentificacionesGeneracionDocumentos")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipoIdentificacionesGeneracionDocumentos")
                        .HasName("tipoIdentificacionesGeneracionDocumentos_pkey");

                    b.ToTable("tipoIdentificacionesGeneracionDocumentos", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoNegocios", b =>
                {
                    b.Property<Guid>("IdTipoNegocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoNegocio")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("activo");

                    b.Property<string>("Codigo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipoNegocio")
                        .HasName("tipoNegocios_pkey");

                    b.ToTable("tipoNegocios", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoValorRetenciones", b =>
                {
                    b.Property<Guid>("IdTipoValorRetencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idTipoValorRetencion")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipoValorRetencion")
                        .HasName("tipoRetencion_pkey");

                    b.ToTable("tipoValorRetenciones", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TiposDenominacionesDinero", b =>
                {
                    b.Property<string>("IdTipoDenominacion")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("idTipoDenominacion");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Tipo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo");

                    b.HasKey("IdTipoDenominacion")
                        .HasName("PK__TiposDen__438C6E7F112628AC");

                    b.ToTable("TiposDenominacionesDinero");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.UsuarioEmpresas", b =>
                {
                    b.Property<Guid>("IdUsuarioEmpresas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuarioEmpresas")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idEmpresa");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuario");

                    b.HasKey("IdUsuarioEmpresas")
                        .HasName("usuarioEmpresas_pkey");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("usuarioEmpresas", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Usuarios", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuario")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Clave")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("clave");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombre");

                    b.HasKey("IdUsuario")
                        .HasName("usuarios_pkey");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Cajas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("Cajas")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK__Cajas__idEmpresa__3AB788A8");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Ciudades", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Provincias", "IdProvinciaNavigation")
                        .WithMany("Ciudades")
                        .HasForeignKey("IdProvincia")
                        .HasConstraintName("ciudades_idProvincia_fkey");

                    b.Navigation("IdProvinciaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Clientes", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Ciudades", "IdCiudadNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("clientes_idCiudad_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("cientes_empresas");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoIdentificaciones", "IdTipoIdentificacionNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTipoIdentificacion")
                        .HasConstraintName("clientes_idTipoIdentificacion_fkey");

                    b.Navigation("IdCiudadNavigation");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdTipoIdentificacionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DenominacionesDinero", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.TiposDenominacionesDinero", "IdTipoDenominacionNavigation")
                        .WithMany("DenominacionesDinero")
                        .HasForeignKey("IdTipoDenominacion")
                        .HasConstraintName("FK__Denominac__idTip__4BE214AA");

                    b.Navigation("IdTipoDenominacionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetalleFacturas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Facturas", "IdFacturaNavigation")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("IdFactura")
                        .IsRequired()
                        .HasConstraintName("detalleFacturas_idFactura_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Ivas", "IdIvaNavigation")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("IdIva")
                        .IsRequired()
                        .HasConstraintName("idIva_");

                    b.HasOne("Gestion_Administrativa_Api.Models.Productos", "IdProductoNavigation")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("detalleFacturas_");

                    b.Navigation("IdFacturaNavigation");

                    b.Navigation("IdIvaNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetalleFormaPagos", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Facturas", "IdFacturaNavigation")
                        .WithMany("DetalleFormaPagos")
                        .HasForeignKey("IdFactura")
                        .IsRequired()
                        .HasConstraintName("detalleFormaPagos_idFactura_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.FormaPagos", "IdFormaPagoNavigation")
                        .WithMany("DetalleFormaPagos")
                        .HasForeignKey("IdFormaPago")
                        .IsRequired()
                        .HasConstraintName("idFormaPago_");

                    b.HasOne("Gestion_Administrativa_Api.Models.TiempoFormaPagos", "IdTiempoFormaPagoNavigation")
                        .WithMany("DetalleFormaPagos")
                        .HasForeignKey("IdTiempoFormaPago")
                        .IsRequired()
                        .HasConstraintName("detalleFormaPagos_idTiempoFormaPago_fkey");

                    b.Navigation("IdFacturaNavigation");

                    b.Navigation("IdFormaPagoNavigation");

                    b.Navigation("IdTiempoFormaPagoNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetallePrecioProductos", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Ivas", "IdIvaNavigation")
                        .WithMany("DetallePrecioProductos")
                        .HasForeignKey("IdIva")
                        .HasConstraintName("detallePrecioProductos_idIva_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Productos", "IdProductoNavigation")
                        .WithMany("DetallePrecioProductos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("detallePrecioProductos_idProducto_fkey");

                    b.Navigation("IdIvaNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetalleProformas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Proformas", "IdProformaNavigation")
                        .WithMany("DetalleProformas")
                        .HasForeignKey("IdProforma")
                        .IsRequired()
                        .HasConstraintName("idProforma");

                    b.Navigation("IdProformaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetallesCajas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Cajas", "IdCajaNavigation")
                        .WithMany("DetallesCajas")
                        .HasForeignKey("IdCaja")
                        .HasConstraintName("FK__DetallesC__idCaj__4EBE8155");

                    b.HasOne("Gestion_Administrativa_Api.Models.DenominacionesDinero", "IdDenominacionNavigation")
                        .WithMany("DetallesCajas")
                        .HasForeignKey("IdDenominacion")
                        .HasConstraintName("FK__DetallesC__idDen__4FB2A58E");

                    b.Navigation("IdCajaNavigation");

                    b.Navigation("IdDenominacionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DetallesCajasCierres", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Cajas", "IdCajaNavigation")
                        .WithMany("DetallesCajasCierres")
                        .HasForeignKey("IdCaja")
                        .HasConstraintName("FK__DetallesC__idCaj__528F1239");

                    b.HasOne("Gestion_Administrativa_Api.Models.DenominacionesDinero", "IdDenominacionNavigation")
                        .WithMany("DetallesCajasCierres")
                        .HasForeignKey("IdDenominacion")
                        .HasConstraintName("FK__DetallesC__idDen__53833672");

                    b.Navigation("IdCajaNavigation");

                    b.Navigation("IdDenominacionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DocumentosEmitir", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.TipoDocumentos", "IdTipoDocumentoNavigation")
                        .WithMany("DocumentosEmitir")
                        .HasForeignKey("IdTipoDocumento")
                        .HasConstraintName("documentosEmitir_idTipoDocumento_fkey");

                    b.Navigation("IdTipoDocumentoNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Empleados", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Ciudades", "IdCiudadNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("empleados_idCiudad_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("empleados_empresas");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoIdentificaciones", "IdTipoIdentificacionNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdTipoIdentificacion")
                        .HasConstraintName("empleados_idTipoIdentificacion_fkey");

                    b.Navigation("IdCiudadNavigation");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdTipoIdentificacionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Empresas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.InformacionFirmas", "IdInformacionFirmaNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdInformacionFirma")
                        .HasConstraintName("fk_empresas_informacionfirmas");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoNegocios", "IdTipoNegocioNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdTipoNegocio")
                        .HasConstraintName("empresas_TipoNegocios");

                    b.Navigation("IdInformacionFirmaNavigation");

                    b.Navigation("IdTipoNegocioNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Establecimientos", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("Establecimientos")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("establecimientos_idEmpresa_fkey");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Facturas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.TipoEstadoDocumentos", "IdTipoEstadoDocumentoNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdTipoEstadoDocumento")
                        .IsRequired()
                        .HasConstraintName("facturas_idTipoEstadoDocumento_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoEstadoSri", "IdTipoEstadoSriNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdTipoEstadoSri")
                        .HasConstraintName("facturas_idTipoEstadoSri_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Usuarios", "IdUsuarioNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("facturas_idUsuario_fkey");

                    b.Navigation("IdTipoEstadoDocumentoNavigation");

                    b.Navigation("IdTipoEstadoSriNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.ImpuestoRetenciones", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.PorcentajeImpuestosRetenciones", "IdPorcentajeImpuestoRetencionNavigation")
                        .WithMany("ImpuestoRetenciones")
                        .HasForeignKey("IdPorcentajeImpuestoRetencion")
                        .IsRequired()
                        .HasConstraintName("impuestoRetenciones_idPorcentajeImpuestoRetencion_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Retenciones", "IdRetencionNavigation")
                        .WithMany("ImpuestoRetenciones")
                        .HasForeignKey("IdRetencion")
                        .IsRequired()
                        .HasConstraintName("tipoRetencionIva_idRetencion_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoValorRetenciones", "IdTipoValorRetencionNavigation")
                        .WithMany("ImpuestoRetenciones")
                        .HasForeignKey("IdTipoValorRetencion")
                        .IsRequired()
                        .HasConstraintName("impuestoRetenciones_idTipoValorRetencion_fkey");

                    b.Navigation("IdPorcentajeImpuestoRetencionNavigation");

                    b.Navigation("IdRetencionNavigation");

                    b.Navigation("IdTipoValorRetencionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.InformacionAdicional", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Facturas", "IdFacturaNavigation")
                        .WithMany("InformacionAdicional")
                        .HasForeignKey("IdFactura")
                        .IsRequired()
                        .HasConstraintName("informacionAdicional_idFactura_fkey");

                    b.Navigation("IdFacturaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.InformacionAdicionalRetencion", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Retenciones", "IdRetencionNavigation")
                        .WithMany("InformacionAdicionalRetencion")
                        .HasForeignKey("IdRetencion")
                        .IsRequired()
                        .HasConstraintName("informacionAdicionalRetencion_idRetencion_fkey");

                    b.Navigation("IdRetencionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Lotes", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Productos", "IdProductoNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("lotes_idProducto_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Usuarios", "IdUsuarioNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("lotes_idUsuario_fkey");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.PorcentajeImpuestosRetenciones", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.TipoValorRetenciones", "IdTipoValorRetencionNavigation")
                        .WithMany("PorcentajeImpuestosRetenciones")
                        .HasForeignKey("IdTipoValorRetencion")
                        .IsRequired()
                        .HasConstraintName("tipoRetencionIva_idTipoValorRetencion_fkey");

                    b.Navigation("IdTipoValorRetencionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Productos", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("productos_empresas");

                    b.HasOne("Gestion_Administrativa_Api.Models.Ivas", "IdIvaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdIva")
                        .HasConstraintName("productos_idIva_fkey");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdIvaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.ProductosProveedores", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Productos", "IdProductoNavigation")
                        .WithMany("ProductosProveedores")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("ProductosProveedores_idProducto_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriPersonas", "IdentificacionNavigation")
                        .WithMany("ProductosProveedores")
                        .HasForeignKey("Identificacion")
                        .HasConstraintName("ProductosProveedores_identificacion_fkey");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdentificacionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Proformas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Establecimientos", "IdEstablecimientoNavigation")
                        .WithMany("Proformas")
                        .HasForeignKey("IdEstablecimiento")
                        .IsRequired()
                        .HasConstraintName("proformas_idEstablecimiento_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.PuntoEmisiones", "IdPuntoEmisionNavigation")
                        .WithMany("Proformas")
                        .HasForeignKey("IdPuntoEmision")
                        .IsRequired()
                        .HasConstraintName("proformas_idPuntoEmision_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Usuarios", "IdUsuarioNavigation")
                        .WithMany("Proformas")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("proformas_idUsuario_fkey");

                    b.Navigation("IdEstablecimientoNavigation");

                    b.Navigation("IdPuntoEmisionNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Proveedores", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Ciudades", "IdCiudadNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("proveedores_idCiudad_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("proveedores_empresas");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoIdentificaciones", "IdTipoIdentificacionNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdTipoIdentificacion")
                        .HasConstraintName("proveedores_idTipoIdentificacion_fkey");

                    b.Navigation("IdCiudadNavigation");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdTipoIdentificacionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.PuntoEmisiones", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("PuntoEmisiones")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("puntoEmisiones_idEmpresa_fkey");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Retenciones", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.DocumentosEmitir", "IdDocumentoEmitirNavigation")
                        .WithMany("Retenciones")
                        .HasForeignKey("IdDocumentoEmitir")
                        .IsRequired()
                        .HasConstraintName("retenciones_idDocumentoEmitir_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("Retenciones")
                        .HasForeignKey("IdEmpresa")
                        .IsRequired()
                        .HasConstraintName("empresas_");

                    b.HasOne("Gestion_Administrativa_Api.Models.Establecimientos", "IdEstablecimientoNavigation")
                        .WithMany("Retenciones")
                        .HasForeignKey("IdEstablecimiento")
                        .IsRequired()
                        .HasConstraintName("retenciones_idEstablecimiento_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriFacturas", "IdFacturaNavigation")
                        .WithMany("Retenciones")
                        .HasForeignKey("IdFactura")
                        .IsRequired()
                        .HasConstraintName("FK_retenciones_sriFactura");

                    b.HasOne("Gestion_Administrativa_Api.Models.PuntoEmisiones", "IdPuntoEmisionNavigation")
                        .WithMany("Retenciones")
                        .HasForeignKey("IdPuntoEmision")
                        .IsRequired()
                        .HasConstraintName("retenciones_idPuntoEmision_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoDocumentos", "IdTipoDocumentoNavigation")
                        .WithMany("Retenciones")
                        .HasForeignKey("IdTipoDocumento")
                        .IsRequired()
                        .HasConstraintName("tipoDocumento");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoEstadoDocumentos", "IdTipoEstadoDocumentoNavigation")
                        .WithMany("Retenciones")
                        .HasForeignKey("IdTipoEstadoDocumento")
                        .IsRequired()
                        .HasConstraintName("retenciones_idTipoEstadoDocumento_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoEstadoSri", "IdTipoEstadoSriNavigation")
                        .WithMany("Retenciones")
                        .HasForeignKey("IdTipoEstadoSri")
                        .HasConstraintName("retenciones_idTipoEstadoSri_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Usuarios", "IdUsuarioNavigation")
                        .WithMany("Retenciones")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("retenciones_idUsuario_fkey");

                    b.Navigation("IdDocumentoEmitirNavigation");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdEstablecimientoNavigation");

                    b.Navigation("IdFacturaNavigation");

                    b.Navigation("IdPuntoEmisionNavigation");

                    b.Navigation("IdTipoDocumentoNavigation");

                    b.Navigation("IdTipoEstadoDocumentoNavigation");

                    b.Navigation("IdTipoEstadoSriNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Secuenciales", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("Secuenciales")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("secuenciales_idEmpresa_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoDocumentos", "IdTipoDocumentoNavigation")
                        .WithMany("Secuenciales")
                        .HasForeignKey("IdTipoDocumento")
                        .HasConstraintName("secuenciales_idTipoDocumento_fkey");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdTipoDocumentoNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SecuencialesProformas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("SecuencialesProformas")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("secuencialesProformas_idEmpresa_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.TipoDocumentos", "IdTipoDocumentoNavigation")
                        .WithMany("SecuencialesProformas")
                        .HasForeignKey("IdTipoDocumento")
                        .HasConstraintName("secuencialesProformas_idTipoDocumento_fkey");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdTipoDocumentoNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriCamposAdicionales", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.SriFacturas", "IdFacturaNavigation")
                        .WithMany("SriCamposAdicionales")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("SriCamposAdicionales_idFactura_fkey");

                    b.Navigation("IdFacturaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriDetallesFacturas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.SriFacturas", "IdFacturaNavigation")
                        .WithMany("SriDetallesFacturas")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("SriDetallesFacturas_idFactura_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriProductos", "IdProductoNavigation")
                        .WithMany("SriDetallesFacturas")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("SriDetallesFacturas_idProducto_fkey");

                    b.Navigation("IdFacturaNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriDetallesFacturasImpuestos", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.SriTarifasImpuestos", "CodigoPorcentajeNavigation")
                        .WithMany("SriDetallesFacturasImpuestos")
                        .HasForeignKey("CodigoPorcentaje")
                        .HasConstraintName("SriDetallesFacturasImpuestos_codigoPorcentaje_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriDetallesFacturas", "IdDetalleFacturaNavigation")
                        .WithMany("SriDetallesFacturasImpuestos")
                        .HasForeignKey("IdDetalleFactura")
                        .HasConstraintName("SriDetallesFacturasImpuestos_idDetalleFactura_fkey");

                    b.Navigation("CodigoPorcentajeNavigation");

                    b.Navigation("IdDetalleFacturaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriFacturas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.SriAmbientes", "AmbienteNavigation")
                        .WithMany("SriFacturas")
                        .HasForeignKey("Ambiente")
                        .HasConstraintName("SriFacturas_ambiente_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriTiposDocumentos", "CodDocNavigation")
                        .WithMany("SriFacturas")
                        .HasForeignKey("CodDoc")
                        .HasConstraintName("SriFacturas_codDoc_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriMonedas", "MonedaNavigation")
                        .WithMany("SriFacturas")
                        .HasForeignKey("Moneda")
                        .HasConstraintName("SriFacturas_moneda_fkey");

                    b.Navigation("AmbienteNavigation");

                    b.Navigation("CodDocNavigation");

                    b.Navigation("MonedaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriPagos", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.SriFormasPagos", "FormaPagoNavigation")
                        .WithMany("SriPagos")
                        .HasForeignKey("FormaPago")
                        .HasConstraintName("SriPagos_formaPago_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriFacturas", "IdFacturaNavigation")
                        .WithMany("SriPagos")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("SriPagos_idFactura_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriUnidadesTiempos", "UnidadTiempoNavigation")
                        .WithMany("SriPagos")
                        .HasForeignKey("UnidadTiempo")
                        .HasConstraintName("SriPagos_unidadTiempo_fkey");

                    b.Navigation("FormaPagoNavigation");

                    b.Navigation("IdFacturaNavigation");

                    b.Navigation("UnidadTiempoNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriPersonas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.SriTiposIdentificaciones", "TipoIdentificacionNavigation")
                        .WithMany("SriPersonas")
                        .HasForeignKey("TipoIdentificacion")
                        .HasConstraintName("SriPersonas_tipoIdentificacion_fkey");

                    b.Navigation("TipoIdentificacionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriPrecios", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.SriTarifasImpuestos", "CodigoNavigation")
                        .WithMany("SriPrecios")
                        .HasForeignKey("Codigo")
                        .HasConstraintName("SriPrecios_codigo_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriProductos", "IdProductoNavigation")
                        .WithMany("SriPrecios")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("SriPrecios_idProducto_fkey");

                    b.Navigation("CodigoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriProductos", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("SriProductos")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("SriProductos_idEmpresa_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriPersonas", "IdentificacionNavigation")
                        .WithMany("SriProductos")
                        .HasForeignKey("Identificacion")
                        .HasConstraintName("SriProductos_identificacion_fkey");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdentificacionNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriTotalesConImpuestos", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.SriTarifasImpuestos", "CodigoPorcentajeNavigation")
                        .WithMany("SriTotalesConImpuestos")
                        .HasForeignKey("CodigoPorcentaje")
                        .HasConstraintName("SriTotalesConImpuestos_codigoPorcentaje_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.SriFacturas", "IdFacturaNavigation")
                        .WithMany("SriTotalesConImpuestos")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("SriTotalesConImpuestos_idFactura_fkey");

                    b.Navigation("CodigoPorcentajeNavigation");

                    b.Navigation("IdFacturaNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.UsuarioEmpresas", b =>
                {
                    b.HasOne("Gestion_Administrativa_Api.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("UsuarioEmpresas")
                        .HasForeignKey("IdEmpresa")
                        .IsRequired()
                        .HasConstraintName("usuarioEmpresas_idEmpresa_fkey");

                    b.HasOne("Gestion_Administrativa_Api.Models.Usuarios", "IdUsuarioNavigation")
                        .WithMany("UsuarioEmpresas")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("usuarioEmpresas_idUsuario_fkey");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Cajas", b =>
                {
                    b.Navigation("DetallesCajas");

                    b.Navigation("DetallesCajasCierres");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Ciudades", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DenominacionesDinero", b =>
                {
                    b.Navigation("DetallesCajas");

                    b.Navigation("DetallesCajasCierres");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.DocumentosEmitir", b =>
                {
                    b.Navigation("Retenciones");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Empresas", b =>
                {
                    b.Navigation("Cajas");

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Establecimientos");

                    b.Navigation("Productos");

                    b.Navigation("Proveedores");

                    b.Navigation("PuntoEmisiones");

                    b.Navigation("Retenciones");

                    b.Navigation("Secuenciales");

                    b.Navigation("SecuencialesProformas");

                    b.Navigation("SriProductos");

                    b.Navigation("UsuarioEmpresas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Establecimientos", b =>
                {
                    b.Navigation("Proformas");

                    b.Navigation("Retenciones");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Facturas", b =>
                {
                    b.Navigation("DetalleFacturas");

                    b.Navigation("DetalleFormaPagos");

                    b.Navigation("InformacionAdicional");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.FormaPagos", b =>
                {
                    b.Navigation("DetalleFormaPagos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.InformacionFirmas", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Ivas", b =>
                {
                    b.Navigation("DetalleFacturas");

                    b.Navigation("DetallePrecioProductos");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.PorcentajeImpuestosRetenciones", b =>
                {
                    b.Navigation("ImpuestoRetenciones");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Productos", b =>
                {
                    b.Navigation("DetalleFacturas");

                    b.Navigation("DetallePrecioProductos");

                    b.Navigation("Lotes");

                    b.Navigation("ProductosProveedores");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Proformas", b =>
                {
                    b.Navigation("DetalleProformas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Provincias", b =>
                {
                    b.Navigation("Ciudades");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.PuntoEmisiones", b =>
                {
                    b.Navigation("Proformas");

                    b.Navigation("Retenciones");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Retenciones", b =>
                {
                    b.Navigation("ImpuestoRetenciones");

                    b.Navigation("InformacionAdicionalRetencion");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriAmbientes", b =>
                {
                    b.Navigation("SriFacturas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriDetallesFacturas", b =>
                {
                    b.Navigation("SriDetallesFacturasImpuestos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriFacturas", b =>
                {
                    b.Navigation("Retenciones");

                    b.Navigation("SriCamposAdicionales");

                    b.Navigation("SriDetallesFacturas");

                    b.Navigation("SriPagos");

                    b.Navigation("SriTotalesConImpuestos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriFormasPagos", b =>
                {
                    b.Navigation("SriPagos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriMonedas", b =>
                {
                    b.Navigation("SriFacturas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriPersonas", b =>
                {
                    b.Navigation("ProductosProveedores");

                    b.Navigation("SriProductos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriProductos", b =>
                {
                    b.Navigation("SriDetallesFacturas");

                    b.Navigation("SriPrecios");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriTarifasImpuestos", b =>
                {
                    b.Navigation("SriDetallesFacturasImpuestos");

                    b.Navigation("SriPrecios");

                    b.Navigation("SriTotalesConImpuestos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriTiposDocumentos", b =>
                {
                    b.Navigation("SriFacturas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriTiposIdentificaciones", b =>
                {
                    b.Navigation("SriPersonas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.SriUnidadesTiempos", b =>
                {
                    b.Navigation("SriPagos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TiempoFormaPagos", b =>
                {
                    b.Navigation("DetalleFormaPagos");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoDocumentos", b =>
                {
                    b.Navigation("DocumentosEmitir");

                    b.Navigation("Retenciones");

                    b.Navigation("Secuenciales");

                    b.Navigation("SecuencialesProformas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoEstadoDocumentos", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Retenciones");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoEstadoSri", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Retenciones");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoIdentificaciones", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoNegocios", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TipoValorRetenciones", b =>
                {
                    b.Navigation("ImpuestoRetenciones");

                    b.Navigation("PorcentajeImpuestosRetenciones");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.TiposDenominacionesDinero", b =>
                {
                    b.Navigation("DenominacionesDinero");
                });

            modelBuilder.Entity("Gestion_Administrativa_Api.Models.Usuarios", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Lotes");

                    b.Navigation("Proformas");

                    b.Navigation("Retenciones");

                    b.Navigation("UsuarioEmpresas");
                });
#pragma warning restore 612, 618
        }
    }
}
